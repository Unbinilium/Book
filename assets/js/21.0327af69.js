(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{131:function(s,a,t){"use strict";t.r(a);var e=t(3),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"use-proxy-in-commandline"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#use-proxy-in-commandline"}},[s._v("#")]),s._v(" Use proxy in commandline")]),s._v(" "),t("p",[s._v("Usually we got a system based proxy but it not works in command line tools like the terminal. We could easily add such proxy by replacing the proxy information below and run them in terminal.")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("http_proxy")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("protocol://username:password@proxyhost:port/\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ftp_proxy")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("protocol://username:password@proxyhost:port/\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("telnet_proxy")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("protocol://username:password@proxyhost:port/\n")])])]),t("p",[s._v("The "),t("code",[s._v("protocol")]),s._v(" should be "),t("code",[s._v("http")]),s._v(", "),t("code",[s._v("https")]),s._v(" or "),t("code",[s._v("socks5")]),s._v(" depends on what type of proxy you are using. Further more, we could add this to "),t("code",[s._v("~/.*shrc")]),s._v(" to initialize proxy when terminal start by "),t("code",[s._v("sudo nano ~/.*shrc")]),s._v(".")]),s._v(" "),t("h3",{attrs:{id:"proxy-with-apt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#proxy-with-apt"}},[s._v("#")]),s._v(" Proxy with "),t("code",[s._v("apt")])]),s._v(" "),t("p",[s._v("Let "),t("code",[s._v("apt")]),s._v(" work with socks5 proxy, add arguments like this")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("-o Acquire::http::proxy"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"protocolh://proxyhost:proxyport/"')]),s._v("\n")])])]),t("p",[s._v("For example:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" -o Acquire::http::proxy"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"socks5h://127.0.0.1:1080/"')]),s._v(" update\n")])])]),t("h3",{attrs:{id:"proxy-with-pip"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#proxy-with-pip"}},[s._v("#")]),s._v(" Proxy with "),t("code",[s._v("pip")])]),s._v(" "),t("p",[s._v("Another big problem is using a proxy like "),t("code",[s._v("socks5")]),s._v(" in "),t("code",[s._v("pip")]),s._v(", "),t("code",[s._v("git")]),s._v(" or even "),t("code",[s._v("brew")]),s._v(", let's have a try. For example, when setting up a socks5 proxy in pip, "),t("code",[s._v("pysocks")]),s._v(" is required as a dependency and we add it by:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("pip "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" pysocks\n")])])]),t("p",[s._v("Then we cloud use pip with a socks5 proxy with command formarted like this:")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("pip install <yourpacakge> --proxy socks5:proxyhost:port\n")])])]),t("h3",{attrs:{id:"proxy-with-git"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#proxy-with-git"}},[s._v("#")]),s._v(" Proxy with "),t("code",[s._v("git")])]),s._v(" "),t("p",[s._v("Similarly we replace "),t("code",[s._v("protocol")]),s._v(" with the proxy type you have to configure git. After that we use git directly, all the data will throught the proxy.")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global http.proxy protocol://username:password@proxyhost:port\n")])])]),t("p",[s._v("You can also try the command below to show all "),t("code",[s._v("http")]),s._v(" proxy sections that set globally. If you set as local config then you should drop the "),t("em",[s._v("argv")]),s._v(" "),t("code",[s._v("--global")]),s._v(" to see the current proxy config in local path.")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global --get-regexp http.*\n")])])]),t("h3",{attrs:{id:"proxy-with-brew"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#proxy-with-brew"}},[s._v("#")]),s._v(" Proxy with "),t("code",[s._v("brew")])]),s._v(" "),t("p",[s._v("If you're a macOS user with homebrew, you can try")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ALL_PROXY")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("protocol://username:password@proxyhost:port brew "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("yourpackage"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),t("h3",{attrs:{id:"disable-commandline-proxy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#disable-commandline-proxy"}},[s._v("#")]),s._v(" Disable commandline proxy")]),s._v(" "),t("p",[s._v("Finally you cloud easily disable these proxies. For "),t("code",[s._v("shell")]),s._v(" in terminal you should remove the proxy settings in "),t("code",[s._v("~/.*shrc")]),s._v(" first and restart your terminal, or use "),t("code",[s._v("unset <name_proxy>")]),s._v(". For git you're supposed to clean the configuration by cammand:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global --unset http.proxy\n")])])]),t("h3",{attrs:{id:"handy-proxy-with-alias"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#handy-proxy-with-alias"}},[s._v("#")]),s._v(" Handy proxy with alias")]),s._v(" "),t("p",[s._v("We simply add this as alias like this(required to replace with your proxy information):")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("proxy_enable")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http_proxy=socks5://127.0.0.1:1080"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("proxy_disable")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"unset http_proxy"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("system_update")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sudo apt-get -o Acquire::http::proxy="')]),s._v("socks5h://127.0.0.1:1080/"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" update"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("system_upgrade")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sudo apt-get -o Acquire::http::proxy="')]),s._v("socks5h://127.0.0.1:1080/"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" dist-upgrade"')]),s._v("\n")])])]),t("p",[s._v("Then just open "),t("em",[s._v("new BASH")]),s._v(" window and type "),t("code",[s._v("system_update")]),s._v(", it actually executes:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" -o Acquire::http::proxy"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"socks5h://127.0.0.1:1080/"')]),s._v(" update\n")])])]),t("p",[s._v("And pass all "),t("code",[s._v("apt")]),s._v(" traffic through socks5 proxy "),t("code",[s._v("127.0.0.1:1080")]),s._v(".")])])}),[],!1,null,null,null);a.default=r.exports}}]);