(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{141:function(n,p,e){"use strict";e.r(p);var o=e(3),i=Object(o.a)({},(function(){var n=this,p=n.$createElement,e=n._self._c||p;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h2",{attrs:{id:"config-opencv"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#config-opencv"}},[n._v("#")]),n._v(" Config OpenCV")]),n._v(" "),e("p",[n._v("Firstly we installed OpenCV by compiling it form its source and libraries installed in "),e("code",[n._v("/usr/local/lib")]),n._v(". We could show the files in this directory by command:")]),n._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[n._v("la /usr/local/lib "),e("span",{pre:!0,attrs:{class:"token operator"}},[n._v("|")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[n._v("grep")]),n._v(" libopencv\n")])])]),e("p",[n._v("And then it shows:")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("libopencv_calib3d.so\nlibopencv_calib3d.so.4.1\nlibopencv_calib3d.so.4.1.2\nlibopencv_core.so\nlibopencv_core.so.4.1\nlibopencv_core.so.4.1.2\nlibopencv_dnn.so\nlibopencv_dnn.so.4.1\nlibopencv_dnn.so.4.1.2\nlibopencv_features2d.so\nlibopencv_features2d.so.4.1\nlibopencv_features2d.so.4.1.2\nlibopencv_flann.so\nlibopencv_flann.so.4.1\nlibopencv_flann.so.4.1.2\nlibopencv_gapi.so\nlibopencv_gapi.so.4.1\nlibopencv_gapi.so.4.1.2\nlibopencv_highgui.so\nlibopencv_highgui.so.4.1\nlibopencv_highgui.so.4.1.2\nlibopencv_imgcodecs.so\nlibopencv_imgcodecs.so.4.1\nlibopencv_imgcodecs.so.4.1.2\nlibopencv_imgproc.so\nlibopencv_imgproc.so.4.1\nlibopencv_imgproc.so.4.1.2\nlibopencv_ml.so\nlibopencv_ml.so.4.1\nlibopencv_ml.so.4.1.2\nlibopencv_objdetect.so\nlibopencv_objdetect.so.4.1\nlibopencv_objdetect.so.4.1.2\nlibopencv_photo.so\nlibopencv_photo.so.4.1\nlibopencv_photo.so.4.1.2\nlibopencv_stitching.so\nlibopencv_stitching.so.4.1\nlibopencv_stitching.so.4.1.2\nlibopencv_videoio.so\nlibopencv_videoio.so.4.1\nlibopencv_videoio.so.4.1.2\nlibopencv_video.so\nlibopencv_video.so.4.1\nlibopencv_video.so.4.1.2\n")])])]),e("p",[n._v("Definitely we refer and use "),e("code",[n._v("libopencv_*.so")]),n._v(" by default in Qt Creator. Then take a look in "),e("code",[n._v("/usr/local/include")]),n._v(" by command:")]),n._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[n._v("tree /usr/local/include -d\n")])])]),e("p",[n._v("It because successfully compiling your code requires the necessarily header file. Package "),e("code",[n._v("tree")]),n._v(" could be installed by command:")]),n._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[n._v("apt-get")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[n._v("install")]),n._v(" tree -y\n")])])]),e("p",[n._v("And we simply use by "),e("code",[n._v("tree")]),n._v(" and the outputs:")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("/usr/local/include\n└── opencv4\n    └── opencv2\n        ├── calib3d\n        ├── core\n        │   ├── cuda\n        │   │   └── detail\n        │   ├── detail\n        │   ├── hal\n        │   ├── opencl\n        │   │   └── runtime\n        │   │       └── autogenerated\n        │   └── utils\n        ├── dnn\n        │   └── utils\n        ├── features2d\n        │   └── hal\n        ├── flann\n        ├── gapi\n        │   ├── cpu\n        │   ├── fluid\n        │   ├── gpu\n        │   ├── infer\n        │   ├── ocl\n        │   ├── own\n        │   ├── streaming\n        │   └── util\n        ├── highgui\n        ├── imgcodecs\n        │   └── legacy\n        ├── imgproc\n        │   ├── detail\n        │   └── hal\n        ├── ml\n        ├── objdetect\n        ├── photo\n        │   └── legacy\n        ├── stitching\n        │   └── detail\n        ├── video\n        │   └── legacy\n        └── videoio\n            └── legacy\n\n42 directories\n")])])]),e("p",[n._v("The header files of opencv we used by "),e("code",[n._v("#include <opencv.hpp>")]),n._v(" is stored in "),e("code",[n._v("/usr/local/include/opencv4/opencv2")]),n._v(" by command:")]),n._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[n._v("tree /usr/local/include/opencv4/opencv2\n")])])]),e("p",[n._v("Then outputs:")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("/usr/local/include/opencv4/opencv2\n├── calib3d\n│   ├── calib3d_c.h\n│   └── calib3d.hpp\n├── calib3d.hpp\n├── core\n│   ├── affine.hpp\n│   ├── async.hpp\n│   ├── base.hpp\n│   ├── bindings_utils.hpp\n│   ├── bufferpool.hpp\n│   ├── check.hpp\n│   ├── core_c.h\n│   ├── core.hpp\n│   ├── cuda\n│   │   ├── block.hpp\n│   │   ├── border_interpolate.hpp\n│   │   ├── color.hpp\n│   │   ├── common.hpp\n│   │   ├── datamov_utils.hpp\n│   │   ├── detail\n│   │   │   ├── color_detail.hpp\n│   │   │   ├── reduce.hpp\n│   │   │   ├── reduce_key_val.hpp\n│   │   │   ├── transform_detail.hpp\n│   │   │   ├── type_traits_detail.hpp\n│   │   │   └── vec_distance_detail.hpp\n│   │   ├── dynamic_smem.hpp\n│   │   ├── emulation.hpp\n│   │   ├── filters.hpp\n│   │   ├── funcattrib.hpp\n│   │   ├── functional.hpp\n│   │   ├── limits.hpp\n│   │   ├── reduce.hpp\n│   │   ├── saturate_cast.hpp\n│   │   ├── scan.hpp\n│   │   ├── simd_functions.hpp\n│   │   ├── transform.hpp\n│   │   ├── type_traits.hpp\n│   │   ├── utility.hpp\n│   │   ├── vec_distance.hpp\n│   │   ├── vec_math.hpp\n│   │   ├── vec_traits.hpp\n│   │   ├── warp.hpp\n│   │   ├── warp_reduce.hpp\n│   │   └── warp_shuffle.hpp\n│   ├── cuda.hpp\n│   ├── cuda.inl.hpp\n│   ├── cuda_stream_accessor.hpp\n│   ├── cuda_types.hpp\n│   ├── cv_cpu_dispatch.h\n│   ├── cv_cpu_helper.h\n│   ├── cvdef.h\n│   ├── cvstd.hpp\n│   ├── cvstd.inl.hpp\n│   ├── cvstd_wrapper.hpp\n│   ├── detail\n│   │   ├── async_promise.hpp\n│   │   └── exception_ptr.hpp\n│   ├── directx.hpp\n│   ├── eigen.hpp\n│   ├── fast_math.hpp\n│   ├── hal\n│   │   ├── hal.hpp\n│   │   ├── interface.h\n│   │   ├── intrin_avx512.hpp\n│   │   ├── intrin_avx.hpp\n│   │   ├── intrin_cpp.hpp\n│   │   ├── intrin_forward.hpp\n│   │   ├── intrin.hpp\n│   │   ├── intrin_msa.hpp\n│   │   ├── intrin_neon.hpp\n│   │   ├── intrin_sse_em.hpp\n│   │   ├── intrin_sse.hpp\n│   │   ├── intrin_vsx.hpp\n│   │   ├── intrin_wasm.hpp\n│   │   └── msa_macros.h\n│   ├── mat.hpp\n│   ├── mat.inl.hpp\n│   ├── matx.hpp\n│   ├── neon_utils.hpp\n│   ├── ocl_genbase.hpp\n│   ├── ocl.hpp\n│   ├── opencl\n│   │   ├── ocl_defs.hpp\n│   │   ├── opencl_info.hpp\n│   │   ├── opencl_svm.hpp\n│   │   └── runtime\n│   │       ├── autogenerated\n│   │       │   ├── opencl_clamdblas.hpp\n│   │       │   ├── opencl_clamdfft.hpp\n│   │       │   ├── opencl_core.hpp\n│   │       │   ├── opencl_core_wrappers.hpp\n│   │       │   ├── opencl_gl.hpp\n│   │       │   └── opencl_gl_wrappers.hpp\n│   │       ├── opencl_clamdblas.hpp\n│   │       ├── opencl_clamdfft.hpp\n│   │       ├── opencl_core.hpp\n│   │       ├── opencl_core_wrappers.hpp\n│   │       ├── opencl_gl.hpp\n│   │       ├── opencl_gl_wrappers.hpp\n│   │       ├── opencl_svm_20.hpp\n│   │       ├── opencl_svm_definitions.hpp\n│   │       └── opencl_svm_hsa_extension.hpp\n│   ├── opengl.hpp\n│   ├── operations.hpp\n│   ├── optim.hpp\n│   ├── ovx.hpp\n│   ├── persistence.hpp\n│   ├── saturate.hpp\n│   ├── simd_intrinsics.hpp\n│   ├── softfloat.hpp\n│   ├── sse_utils.hpp\n│   ├── traits.hpp\n│   ├── types_c.h\n│   ├── types.hpp\n│   ├── utility.hpp\n│   ├── utils\n│   │   ├── allocator_stats.hpp\n│   │   ├── allocator_stats.impl.hpp\n│   │   ├── filesystem.hpp\n│   │   ├── logger.defines.hpp\n│   │   ├── logger.hpp\n│   │   ├── logtag.hpp\n│   │   └── trace.hpp\n│   ├── va_intel.hpp\n│   ├── version.hpp\n│   └── vsx_utils.hpp\n├── core.hpp\n├── cvconfig.h\n├── dnn\n│   ├── all_layers.hpp\n│   ├── dict.hpp\n│   ├── dnn.hpp\n│   ├── dnn.inl.hpp\n│   ├── layer.details.hpp\n│   ├── layer.hpp\n│   ├── shape_utils.hpp\n│   ├── utils\n│   │   └── inference_engine.hpp\n│   └── version.hpp\n├── dnn.hpp\n├── features2d\n│   ├── features2d.hpp\n│   └── hal\n│       └── interface.h\n├── features2d.hpp\n├── flann\n│   ├── all_indices.h\n│   ├── allocator.h\n│   ├── any.h\n│   ├── autotuned_index.h\n│   ├── composite_index.h\n│   ├── config.h\n│   ├── defines.h\n│   ├── dist.h\n│   ├── dummy.h\n│   ├── dynamic_bitset.h\n│   ├── flann_base.hpp\n│   ├── flann.hpp\n│   ├── general.h\n│   ├── ground_truth.h\n│   ├── hdf5.h\n│   ├── heap.h\n│   ├── hierarchical_clustering_index.h\n│   ├── index_testing.h\n│   ├── kdtree_index.h\n│   ├── kdtree_single_index.h\n│   ├── kmeans_index.h\n│   ├── linear_index.h\n│   ├── logger.h\n│   ├── lsh_index.h\n│   ├── lsh_table.h\n│   ├── matrix.h\n│   ├── miniflann.hpp\n│   ├── nn_index.h\n│   ├── object_factory.h\n│   ├── params.h\n│   ├── random.h\n│   ├── result_set.h\n│   ├── sampling.h\n│   ├── saving.h\n│   ├── simplex_downhill.h\n│   └── timer.h\n├── flann.hpp\n├── gapi\n│   ├── core.hpp\n│   ├── cpu\n│   │   ├── core.hpp\n│   │   ├── gcpukernel.hpp\n│   │   └── imgproc.hpp\n│   ├── fluid\n│   │   ├── core.hpp\n│   │   ├── gfluidbuffer.hpp\n│   │   ├── gfluidkernel.hpp\n│   │   └── imgproc.hpp\n│   ├── garg.hpp\n│   ├── garray.hpp\n│   ├── gasync_context.hpp\n│   ├── gcall.hpp\n│   ├── gcommon.hpp\n│   ├── gcompiled_async.hpp\n│   ├── gcompiled.hpp\n│   ├── gcompoundkernel.hpp\n│   ├── gcomputation_async.hpp\n│   ├── gcomputation.hpp\n│   ├── gkernel.hpp\n│   ├── gmat.hpp\n│   ├── gmetaarg.hpp\n│   ├── gproto.hpp\n│   ├── gpu\n│   │   ├── core.hpp\n│   │   ├── ggpukernel.hpp\n│   │   └── imgproc.hpp\n│   ├── gscalar.hpp\n│   ├── gstreaming.hpp\n│   ├── gtransform.hpp\n│   ├── gtyped.hpp\n│   ├── gtype_traits.hpp\n│   ├── imgproc.hpp\n│   ├── infer\n│   │   └── ie.hpp\n│   ├── infer.hpp\n│   ├── ocl\n│   │   ├── core.hpp\n│   │   ├── goclkernel.hpp\n│   │   └── imgproc.hpp\n│   ├── opencv_includes.hpp\n│   ├── operators.hpp\n│   ├── own\n│   │   ├── assert.hpp\n│   │   ├── convert.hpp\n│   │   ├── cvdefs.hpp\n│   │   ├── exports.hpp\n│   │   ├── mat.hpp\n│   │   ├── saturate.hpp\n│   │   ├── scalar.hpp\n│   │   └── types.hpp\n│   ├── streaming\n│   │   ├── cap.hpp\n│   │   └── source.hpp\n│   └── util\n│       ├── any.hpp\n│       ├── compiler_hints.hpp\n│       ├── optional.hpp\n│       ├── throw.hpp\n│       ├── util.hpp\n│       └── variant.hpp\n├── gapi.hpp\n├── highgui\n│   ├── highgui_c.h\n│   └── highgui.hpp\n├── highgui.hpp\n├── imgcodecs\n│   ├── imgcodecs_c.h\n│   ├── imgcodecs.hpp\n│   ├── ios.h\n│   └── legacy\n│       └── constants_c.h\n├── imgcodecs.hpp\n├── imgproc\n│   ├── detail\n│   │   └── gcgraph.hpp\n│   ├── hal\n│   │   ├── hal.hpp\n│   │   └── interface.h\n│   ├── imgproc_c.h\n│   ├── imgproc.hpp\n│   └── types_c.h\n├── imgproc.hpp\n├── ml\n│   ├── ml.hpp\n│   └── ml.inl.hpp\n├── ml.hpp\n├── objdetect\n│   ├── detection_based_tracker.hpp\n│   └── objdetect.hpp\n├── objdetect.hpp\n├── opencv.hpp\n├── opencv_modules.hpp\n├── photo\n│   ├── cuda.hpp\n│   ├── legacy\n│   │   └── constants_c.h\n│   └── photo.hpp\n├── photo.hpp\n├── stitching\n│   ├── detail\n│   │   ├── autocalib.hpp\n│   │   ├── blenders.hpp\n│   │   ├── camera.hpp\n│   │   ├── exposure_compensate.hpp\n│   │   ├── matchers.hpp\n│   │   ├── motion_estimators.hpp\n│   │   ├── seam_finders.hpp\n│   │   ├── timelapsers.hpp\n│   │   ├── util.hpp\n│   │   ├── util_inl.hpp\n│   │   ├── warpers.hpp\n│   │   └── warpers_inl.hpp\n│   └── warpers.hpp\n├── stitching.hpp\n├── video\n│   ├── background_segm.hpp\n│   ├── legacy\n│   │   └── constants_c.h\n│   ├── tracking.hpp\n│   └── video.hpp\n├── video.hpp\n├── videoio\n│   ├── cap_ios.h\n│   ├── legacy\n│   │   └── constants_c.h\n│   ├── registry.hpp\n│   ├── videoio_c.h\n│   └── videoio.hpp\n└── videoio.hpp\n\n40 directories, 276 files\n")])])]),e("p",[n._v("Obviously we could now write the "),e("code",[n._v(".pro")]),n._v(" configuration what we want like this, create and save it in you project in Qt Creator.")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("SOURCES += main.cpp\n\nINCLUDEPATH += /usr/local/include/opencv4 \\\n               /usr/local/include/opencv4/opencv2\n\nLIBS += /usr/local/lib/libopencv_*.so\n")])])])])}),[],!1,null,null,null);p.default=i.exports}}]);